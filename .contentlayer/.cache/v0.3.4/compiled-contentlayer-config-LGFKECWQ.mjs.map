{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import {makeSource, defineDocumentType} from \"@contentlayer/source-files\";\r\nimport readingTime from \"reading-time\";\r\nimport rehypeSlug from \"rehype-slug\";\r\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\r\nimport rehypePrettyCode from \"rehype-pretty-code\";\r\nimport GithubSlugger from 'github-slugger'\r\nimport remarkGfm from \"remark-gfm\";\r\n\r\nconst Blog = defineDocumentType(() => ({\r\n    name: \"Blog\",\r\n    filePathPattern: \"**/**/*.mdx\",\r\n    contentType: \"mdx\",\r\n    \r\n    fields: {\r\n        title: {\r\n            type: \"string\",\r\n            required: true,\r\n        },\r\n\r\n        publishedAt: {\r\n            type: \"date\",\r\n            required: true,\r\n    },\r\n\r\n    updatedAt: {\r\n        type: \"date\",\r\n        required: true,\r\n      },\r\n      description: {\r\n        type: \"string\",\r\n        required: true,\r\n      },\r\n      image: { type: \"image\" },\r\n      isPublished: {\r\n        type: \"boolean\",\r\n        default: true,\r\n      },\r\n      author: {\r\n        type: \"string\",\r\n        required: true,\r\n      },\r\n      tags: {\r\n        type: \"list\",\r\n        of: { type: \"string\" },\r\n      },\r\n    },\r\n    computedFields: {\r\n      url: {\r\n        type: \"string\",\r\n        resolve: (doc) => `/blogs/${doc._raw.flattenedPath}`,\r\n      },\r\n      readingTime: {\r\n        type: \"json\",\r\n        resolve: (doc) => readingTime(doc.body.raw)\r\n      },\r\n\r\n      toc: {\r\n         type: \"json\",\r\n         resolve: async (doc) => {\r\n            const regularExpression = /\\n(?<flag>#{1,6})\\s+(?<content>.+)/g;\r\n            const slugger = new GithubSlugger();\r\n            const headings = Array.from(doc.body.raw.matchAll(regularExpression)).map(({groups}) => {\r\n              const flag = groups?.flag;\r\n              const content = groups?.content ;\r\n\r\n              return {\r\n                level: flag?.length === 1 ? \"one\" : flag?.length == 2 ? \"two\" : \"three\",\r\n                text: content,\r\n                slug:content ? slugger.slug(content): undefined\r\n\r\n              }\r\n            })\r\n\r\n            return headings;\r\n         }\r\n\r\n      }\r\n\r\n    },\r\n}));\r\n\r\nconst Options = {\r\n    theme: 'github-dark',\r\n    grid: false,\r\n    \r\n}\r\n\r\nexport default makeSource ({\r\n    contentDirPath: \"content\",\r\n    documentTypes: [Blog],\r\n    disableImportAliasWarning: true,\r\n    mdx: { remarkPlugins: [remarkGfm], rehypePlugins: [rehypeSlug, [rehypeAutolinkHeadings, {behavior: \"append\"}], [rehypePrettyCode, Options] ] }\r\n});"],
  "mappings": ";AAAA,SAAQ,YAAY,0BAAyB;AAC7C,OAAO,iBAAiB;AACxB,OAAO,gBAAgB;AACvB,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,mBAAmB;AAC1B,OAAO,eAAe;AAEtB,IAAM,OAAO,mBAAmB,OAAO;AAAA,EACnC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EAEb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IAEA,aAAa;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IAClB;AAAA,IAEA,WAAW;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,OAAO,EAAE,MAAM,QAAQ;AAAA,IACvB,aAAa;AAAA,MACX,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,IACvB;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,UAAU,IAAI,KAAK,aAAa;AAAA,IACpD;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,YAAY,IAAI,KAAK,GAAG;AAAA,IAC5C;AAAA,IAEA,KAAK;AAAA,MACF,MAAM;AAAA,MACN,SAAS,OAAO,QAAQ;AACrB,cAAM,oBAAoB;AAC1B,cAAM,UAAU,IAAI,cAAc;AAClC,cAAM,WAAW,MAAM,KAAK,IAAI,KAAK,IAAI,SAAS,iBAAiB,CAAC,EAAE,IAAI,CAAC,EAAC,OAAM,MAAM;AACtF,gBAAM,OAAO,QAAQ;AACrB,gBAAM,UAAU,QAAQ;AAExB,iBAAO;AAAA,YACL,OAAO,MAAM,WAAW,IAAI,QAAQ,MAAM,UAAU,IAAI,QAAQ;AAAA,YAChE,MAAM;AAAA,YACN,MAAK,UAAU,QAAQ,KAAK,OAAO,IAAG;AAAA,UAExC;AAAA,QACF,CAAC;AAED,eAAO;AAAA,MACV;AAAA,IAEH;AAAA,EAEF;AACJ,EAAE;AAEF,IAAM,UAAU;AAAA,EACZ,OAAO;AAAA,EACP,MAAM;AAEV;AAEA,IAAO,8BAAQ,WAAY;AAAA,EACvB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,2BAA2B;AAAA,EAC3B,KAAK,EAAE,eAAe,CAAC,SAAS,GAAG,eAAe,CAAC,YAAY,CAAC,wBAAwB,EAAC,UAAU,SAAQ,CAAC,GAAG,CAAC,kBAAkB,OAAO,CAAE,EAAE;AACjJ,CAAC;",
  "names": []
}
